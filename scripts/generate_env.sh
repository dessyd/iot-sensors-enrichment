#!/usr/bin/env bash
# Small helper to create a local .env for development
# - backs up existing .env to .env.bak.TIMESTAMP
# - generates a secure JWT secret
# - writes sensible defaults used by the project

set -euo pipefail

HERE="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
ENV_FILE="$HERE/.env"

timestamp() {
  date +%Y%m%dT%H%M%S
}

backup_env() {
  if [ -f "$ENV_FILE" ]; then
    bak="$ENV_FILE.bak.$(timestamp)"
    echo "Backing up existing .env to $bak"
    cp "$ENV_FILE" "$bak"
  fi
}

generate_secret() {
  # 32 bytes -> 64 hex chars
  if command -v openssl >/dev/null 2>&1; then
    openssl rand -hex 32
  else
    python3 - <<'PY'
import secrets
print(secrets.token_hex(32))
PY
  fi
}

write_env() {
  cat > "$ENV_FILE" <<EOF
# Local development .env generated by scripts/generate_env.sh
ADMIN_PASSWORD=changeme
DATABASE_URL=sqlite:///./iot_enrichment.db
JWT_SECRET=$(generate_secret)
JWT_ALGORITHM=HS256
JWT_EXPIRATION=60
EOF
  echo "Wrote $ENV_FILE"
}

main() {
  backup_env
  write_env
  echo "Done. Edit $ENV_FILE as needed."
}

main "$@"
